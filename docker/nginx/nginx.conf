# Nginx proxies requests to front-end and back-end stacks

user                                    nginx;
worker_processes                        1;
error_log                               /proc/self/fd/2;
pid                                     /var/run/nginx.pid;

events {
    worker_connections                  1024;
    multi_accept                        on;
}

http {
    include                             /etc/nginx/mime.types;
    default_type                        application/octet-stream;
    fastcgi_buffers                     256 4k;
    fastcgi_intercept_errors            on;
    fastcgi_read_timeout                900;
    include                             fastcgi_params;
    access_log                          /proc/self/fd/2;
    port_in_redirect                    off;
    send_timeout                        600;
    sendfile                            on;
    client_body_timeout                 600;
    client_header_timeout               600;
    client_max_body_size                256M;
    keepalive_timeout                   60;
    keepalive_requests                  100;
    reset_timedout_connection           off;
    tcp_nodelay                         on;
    tcp_nopush                          on;
    server_tokens                       off;

    gzip                                on;
    gzip_buffers                        16 8k;
    gzip_comp_level                     2;
    gzip_http_version                   1.1;
    gzip_min_length                     10240;
    gzip_types                          text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf;
    gzip_vary                           on;
    gzip_proxied                        any;
    gzip_disable                        msie6;

    add_header                          X-XSS-Protection '1; mode=block';
    add_header                          Content-Security-Policy "frame-ancestors cases4real.com";
    add_header                          X-Content-Type-Options nosniff;

    map $http_x_forwarded_proto $fastcgi_https {
        default $https;
        http '';
        https on;
    }

    map $uri $no_slash_uri {
        ~^/(?<no_slash>.*)$ $no_slash;
    }

    upstream php_upstream {
        server php:9000;
    }

    server {
        server_name skins4real.com;
        listen 80;
        root /var/www/html/web;
        fastcgi_keep_conn on;

        location / {
            # try to serve file directly, fallback to app.php
            try_files $uri /app.php$is_args$args;
        }

        location ~ ^/app\.php(/|$) {
          fastcgi_pass php_upstream;
          fastcgi_split_path_info ^(.+\.php)(/.*)$;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
          fastcgi_param DOCUMENT_ROOT $realpath_root;
          internal;
        }

        location ~* ^(?:.+\.(?:htaccess|make|txt|engine|inc|info|install|module|profile|po|pot|sh|.*sql|test|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
          return 404;
        }

        location ^~ /.git {
          return 404;
        }

        location ^~ /backup {
          return 404;
        }

        location ~ \.php$ {
          return 404;
        }
    }
}
